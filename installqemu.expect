###############################################
#
# install alpine with docker in qemu x86_64
#

# Wait enough (forever) until a long-time boot
set timeout -1

# load the answerfile
set answerfile [exec cat ./answerfile]

# create the install dir
spawn mkdir -p "$env(INSTALLATION_DIR)"

# copy the scripts to the install dir
expect "$"
spawn cp startqemu.sh "$env(INSTALLATION_DIR)"

expect "$"
spawn cp ssh2qemu.sh "$env(INSTALLATION_DIR)"

spawn curl -v -L -o "$env(INSTALLATION_DIR)/alpine.iso" -C - $env(ALPINE_ISO_URL)
expect "left intact"

spawn rm -f "$env(INSTALLATION_DIR)/qemukey" "$env(INSTALLATION_DIR)/qemukey.pub"
expect "$"

spawn ssh-keygen -b 2048 -t rsa -N "" -f "$env(INSTALLATION_DIR)/qemukey"
expect "\[SHA256\]"

set qemukey [exec cat "$env(INSTALLATION_DIR)/qemukey.pub"]

#
# install the system
#

spawn rm -f "$env(INSTALLATION_DIR)/alpine.img"
spawn qemu-img create -f qcow2 "$env(INSTALLATION_DIR)/alpine.img" $env(DISK_SIZE)
expect "alpine.img"

sleep 5
spawn qemu-system-x86_64 -machine q35 -m 2048 -smp cpus=2 -cpu qemu64 \
   -drive if=pflash,format=raw,read-only=on,file=$env(PREFIX)/share/qemu/edk2-x86_64-code.fd \
   -netdev user,id=n1,hostfwd=tcp::2222-:22,hostfwd=tcp::9000-:9000 -device virtio-net,netdev=n1 \
   -cdrom "$env(INSTALLATION_DIR)/alpine.iso" \
   -nographic "$env(INSTALLATION_DIR)/alpine.img"

set qemuID $spawn_id

expect "login:"
send "root\r"

# dns fix
expect ":~#"
send "echo 'nameserver 8.8.8.8' > /etc/resolv.conf\r"

expect ":~#"
send "sed -i 's/^#RESOLV_CONF=\"no\"/RESOLV_CONF=\"no\"/' /etc/udhcpc/udhcpc.conf\r"

# disable ipv6
expect "#"
send "echo 'net.ipv6.conf.all.disable_ipv6 = 1' >> /etc/sysctl.conf\r"
expect "#"
send "sysctl -p\r"

expect ":~#"
send "setup-interfaces\r"

expect "\[eth0\]"
send "\r"

expect "\[dhcp\]"
send "\r"

expect "\[no\]"
send "\r"

expect ":~#"
send "ifup eth0\r"

expect ":~#"
send "vi /root/answerfile\r"
sleep 3
send "i"
sleep 3
send "$answerfile\r"
# Escape
sleep 3
send [format "%c(" 27]
sleep 3
send ":wq\r"
sleep 3


send "cat /root/answerfile\r"
sleep 3

expect ":~#"
send "setup-alpine -f answerfile\r"

expect "password:"
send "$env(ROOT_PASSWORD)\n"

expect "password:"
send "$env(ROOT_PASSWORD)\n"

expect "Setup a user?"
send "\r"

expect "Erase the above disk"
send "y\r"

expect "No error reported."

expect "Please reboot"

send "poweroff\r"
expect ":~#"

# back on console
expect "$"

#
# setup the system
#
spawn qemu-system-x86_64 -machine q35 -m 1024 -smp cpus=2 -cpu qemu64 \
   -drive if=pflash,format=raw,read-only=on,file=$env(PREFIX)/share/qemu/edk2-x86_64-code.fd \
   -netdev user,id=n1,hostfwd=tcp::2222-:22 -device virtio-net,netdev=n1 \
   -nographic "$env(INSTALLATION_DIR)/alpine.img"

set qemuID $spawn_id

expect "login:"
send "root\r"

expect "Password:"
send "$env(ROOT_PASSWORD)\n"

# only allow login with ssh key
expect "#"
send "sed -i -E 's/^#PermitRootLogin prohibit-password/PermitRootLogin prohibit-password/' /etc/ssh/sshd_config\r"

expect "#"
send "service sshd start\r"

# dns fix
expect "#"
send "echo 'nameserver 8.8.8.8' > /etc/resolv.conf\r"

expect "#"
send "sed -i 's/^#RESOLV_CONF=\"no\"/RESOLV_CONF=\"no\"/' /etc/udhcpc/udhcpc.conf\r"

# enable repo
expect "#"
send "sed -i 's|^#http://|http://|' /etc/apk/repositories\r"

expect "#"
send "apk update && apk add docker ip6tables\r"

expect "#"
send "service docker start\r"

expect "#"
send "rc-update add docker\r"

expect "#"
send "apk add zram-init\r"

# fix broken zram init script
expect "#"
send "sed -i -E 's/num_devices=2/num_devices=1/' /etc/conf.d/zram-init\r"
expect "#"
send "sed -i -E 's/^algo0=zstd/algo0=lzo/' /etc/conf.d/zram-init\r"

expect "#"
send "service zram-init start\r"

expect "#"
send "rc-update add zram-init\r"

expect "#"
send "sed -i -E 's/^algo0=zstd/algo0=lzo/' /etc/conf.d/zram-init\r"

expect "#"
send "mkdir -p /root/.ssh\r"

expect "#"
send "chmod 700 /root/.ssh\r"

expect "#"
send "echo $qemukey >> /root/.ssh/authorized_keys\r"

expect "#"
send "poweroff\r"
expect ":~#"

# back on console
expect "$"


# add docker push
expect "#"
send "apk add docker-compose\r"


# make acount
# acount1
expect "#"
send "mkdir akun1 && cd akun1\r"

expect "#"
send "docker run -d -e EARNAPP_UUID='sdk-android-f52bdd003e414ef6a191915dde21921c'  --name earnapp fazalfarhan01/earnapp:lite\r"

expect "#"
send "cd\r"

# acount2
expect "#"
send "mkdir akun2 && cd akun2\r"

expect "#"
send "docker run -d -e EARNAPP_UUID='sdk-android-5d9704adaed349bfa4ab398816655619'  --name earnapp fazalfarhan01/earnapp:lite\r"

expect "#"
send "cd\r"

# acount3
expect "#"
send "mkdir akun3 && cd akun3\r"

expect "#"
send "docker run -d -e EARNAPP_UUID='sdk-android-d8cfa1f5bb0144b28bebf06bdf1aacdc'  --name earnapp fazalfarhan01/earnapp:lite\r"

expect "#"
send "cd\r"

# acount4
expect "#"
send "mkdir akun4 && cd akun4\r"

expect "#"
send "docker run -d -e EARNAPP_UUID='sdk-android-22d2f230eb10439e8c7b8862dca35c90'  --name earnapp fazalfarhan01/earnapp:lite\r"

expect "#"
send "cd\r"

# acount5
expect "#"
send "mkdir akun5 && cd akun5\r"

expect "#"
send "docker run -d -e EARNAPP_UUID='sdk-android-e5d12f47058c4d35bbcc440cfd922dbd'  --name earnapp fazalfarhan01/earnapp:lite
\r"

expect "#"
send "cd\r"

expect "#"
send "cd\r"














